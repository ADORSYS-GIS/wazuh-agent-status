name: Build Binaries

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  GO_VERSION: 1.22
  APP_NAME: wazuh-agent-status

jobs:
  build-ubuntu:
    name: Build CLI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: Install dependencies
        run: |
          go get github.com/getlantern/systray
          go mod tidy
          go mod download

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libayatana-appindicator3-dev

      - name: Build binary
        run: go build -o dist/${{ env.APP_NAME }}-${{ matrix.target }}

      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ matrix.target }}
          path: ./dist

  release:
    name: Release
    permissions: write-all
    needs:
      - build-ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: '**'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}