name: Build Binaries

on:
  push:
    branches:
      - main

env:
  GO_VERSION: 1.22
  APP_NAME: wazuh-agent-status
  APP_VERSION: 1.0.0
  DEB_ARCH: amd64
  PKG_IDENTIFIER: com.adorsys.wazuh-agent-status
  INSTALL_PATH: /usr/local/bin
  MAINTENER_NAME: Armand Meppa
  MAINTENER_EMAIL: Armand.Meppa@adorsys.com

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: Install dependencies
        run: |
          go get github.com/getlantern/systray
          go mod tidy
          go mod download

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libayatana-appindicator3-dev

      - name: Build binary
        run: GOOS=linux GOARCH=${{ env.DEB_ARCH }} go build -o ${{ env.APP_NAME }}
          
      - name: Create directory structure for .deb
        run: |
          mkdir -p ${{ env.APP_NAME }}_${{ env.APP_VERSION }}/{DEBIAN,${{ env.INSTALL_PATH }}}
          mv ${{ env.APP_NAME }} ${{ env.APP_NAME }}_${{ env.APP_VERSION }}/${{ env.INSTALL_PATH }}/
          echo "Package: ${{ env.APP_NAME }}
          Version: ${{ env.APP_VERSION }}
          Section: base
          Priority: optional
          Architecture: ${{ env.DEB_ARCH }}
          Depends: libc6 (>= 2.14)
          Maintainer: ${{ env.MAINTENER_NAME }} ${{ env.MAINTENER_EMAIL }}
          Description: Wazuh Agent
          A system tray application to monitor Wazuh Agent status." > ${{ env.APP_NAME }}_${{ env.APP_VERSION }}/DEBIAN/control    
          
      - name: Build .deb package
        run: dpkg-deb --build ${{ env.APP_NAME }}_${{ env.APP_VERSION }}

      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-deb
          path: ${{ env.APP_NAME }}_${{ env.APP_VERSION }}.deb

  build-macos:
    runs-on: macos-latest
    needs: build-linux
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: Install dependencies
        run: |
          go get github.com/getlantern/systray
          go mod tidy
          go mod download

      - name: Build binary for macOS
        run: |
          CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -o dist/wazuh-tray

      - name: Create directory structure for .pkg
        run: |
          mkdir -p pkgroot/${{ env.INSTALL_PATH }}
          mv ${{ env.APP_NAME }} pkgroot/${{ env.INSTALL_PATH }}/

      - name: Build .pkg package
        run: |
          pkgbuild --identifier ${{ env.PKG_IDENTIFIER }} \
                   --version ${{ env.APP_VERSION }} \
                   --root pkgroot \
                   --install-location / \
                   ${{ env.APP_NAME }}.pkg

      - name: Upload .pkg file
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-pkg
          path: ${{ env.APP_NAME }}.pkg

  build-windows:
    runs-on: ubuntu-latest
    needs: build-macos
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: Install dependencies
        run: |
          go get github.com/getlantern/systray
          go mod tidy
          go mod download

      - name: Build binary for Windows
        run: |
          mkdir -p dist
          GOOS=windows GOARCH=amd64 go build -o dist/wazuh-tray.exe

      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: wazuh-tray-windows-amd64
          path: dist/wazuh-tray.exe
