name: Build and Release Binaries for Linux (amd64, arm64), MacOS (Silicon arm64) and Windows (amd64)

on:
  push:
    branches:
      - main
      - develop
      - fix/*
    tags:
      - 'v*'

env:
  GO_VERSION: 1.22
  CLIENT_APP_NAME: wazuh-agent-status-client
  SERVER_APP_NAME: wazuh-agent-status

jobs:
  build-linux:
    name: Build for Linux amd64
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libayatana-appindicator3-dev \
            libdbusmenu-glib-dev \
            libgtk-3-dev \
            libharfbuzz-dev \
            libpango1.0-dev \
            libcairo2-dev \
            libgdk-pixbuf2.0-dev \
            libatk1.0-dev

      - name: Build client binary
        run: |
          GOOS=linux GOARCH=${{ matrix.arch }} go build -C ./${{ env.CLIENT_APP_NAME }} -o ./dist/${{ env.CLIENT_APP_NAME }}-linux-${{ matrix.arch }}

      - name: Build server binary
        run: |
          GOOS=linux GOARCH=${{ matrix.arch }} go build -C ./${{ env.SERVER_APP_NAME }} -o ./dist/${{ env.SERVER_APP_NAME }}-linux-${{ matrix.arch }}

      - name: Upload Linux client binaries
        if: ${{ !env.ACT }} 
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.CLIENT_APP_NAME }}-linux-${{ matrix.arch }}
          path: |
            ${{ env.CLIENT_APP_NAME }}/dist/
          
      - name: Upload Linux server binaries
        if: ${{ !env.ACT }} 
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SERVER_APP_NAME }}-linux-${{ matrix.arch }}
          path: | 
            ${{ env.SERVER_APP_NAME }}/dist/
          
  build-macos:
    name: Build for macOS ARM64
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install MacOS Dependencies
        run: |
          brew install gtk+3

      - name: Build client binary for macOS Silicon (ARM64)
        run: |
          GOOS=darwin GOARCH=${{ matrix.arch }} go build -C ./${{ env.CLIENT_APP_NAME }} -o ./dist/${{ env.CLIENT_APP_NAME }}-linux-${{ matrix.arch }}

      - name: Build server binary for macOS Silicon (ARM64)
        run: |
          GOOS=darwin GOARCH=${{ matrix.arch }} go build -C ./${{ env.SERVER_APP_NAME }} -o ./dist/${{ env.SERVER_APP_NAME }}-linux-${{ matrix.arch }}

      - name: Upload MacOS client binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.CLIENT_APP_NAME }}-linux-${{ matrix.arch }}
          path: ${{ env.CLIENT_APP_NAME }}/dist/
          
      - name: Upload MacOS server binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SERVER_APP_NAME }}-linux-${{ matrix.arch }}
          path: ${{ env.SERVER_APP_NAME }}/dist/
          
  release:
    name: Release
    permissions: write-all
    needs:
      - build-linux
      - build-macos
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: $PWD/dist

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: '**'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}